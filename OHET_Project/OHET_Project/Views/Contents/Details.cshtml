@model OHET_Project.Models.models.Content

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<h2>Classes</h2>
<table class="table">
    @foreach (var item in Model.classes.OrderBy(x => x.name))
    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                @if (@item.description.Split().ToArray().Length <= 20)
                {
                    <td>
                        @item.description
                    </td>
                }
                else
                {
                    <td>
                        @String.Join(" ", @item.description.Split().Take(20))
                        @Html.ActionLink("...", "Details", "Classes", new { id = item.IDClass }, new { })
                    </td>
                }
                <td>
                    @Html.ActionLink("Details", "Details", "Classes", new { id = item.IDClass }, new { })
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Classes", new { id = item.IDClass }, new { }) |
                        @Html.ActionLink("Delete", "Delete", "Classes", new { id = item.IDClass }, new { })
                    </td>
                }
            </tr>
    }
</table>

<h2>Rules</h2>
<table class="table">
    @foreach (var item in Model.rules)
    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.title)
                </td>
                @if (@item.description.Split().ToArray().Length <= 20)
                {
                    <td>
                        @item.description
                    </td>
                }
                else
                {
                    <td>
                        @String.Join(" ", @item.description.Split().Take(20))
                        @Html.ActionLink("...", "Details", "Rules", new { id = item.IDRule }, new { })
                    </td>
                }
                <td>
                    @Html.ActionLink("Details", "Details", "Rules", new { id = item.IDRule }, new { })
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Rules", new { id = item.IDRule }, new { }) |
                        @Html.ActionLink("Delete", "Delete", "Rules", new { id = item.IDRule }, new { })
                    </td>
                }
            </tr>
    }

</table>

<h2>Adventures</h2>
<table class="table">
    @foreach (var item in Model.adventures)
    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.title)
                </td>
                @if (@item.description.Split().ToArray().Length <= 20)
                {
                    <td>
                        @item.description
                    </td>
                }
                else
                {
                    <td>
                        @String.Join(" ", @item.description.Split().Take(20))
                        @Html.ActionLink("...", "Details", "Adventures", new { id = item.IDAdventure }, new { })
                    </td>
                }
                <td>
                    @Html.ActionLink("Details", "Details", "Adventures", new { id = item.IDAdventure }, new { })
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Adventures", new { id = item.IDAdventure }, new { }) |
                        @Html.ActionLink("Delete", "Delete", "Adventures", new { id = item.IDAdventure }, new { })
                    </td>
                }
            </tr>
    }
</table>

<h2>Items</h2>
<table class="table">
    @foreach (var item in Model.items)
    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @if (@item.Notes.Split().ToArray().Length <= 20)
                {
                    <td>
                        @item.Notes
                    </td>
                }
                else
                {
                    <td>
                        @String.Join(" ", @item.Notes.Split().Take(20))
                        @Html.ActionLink("...", "Details", "Items", new { id = item.IDItem }, new { })
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", "Items", new { id = item.IDItem }, new { })
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Items", new { id = item.IDItem }, new { }) |
                        @Html.ActionLink("Delete", "Delete", "Items", new { id = item.IDItem }, new { })
                    </td>
                }
            </tr>
    }
</table>

<h2>Spells</h2>
@foreach (var i in Model.spells.Select(c => c.Class.IDClass).Distinct().ToArray())
{
    <h2>@Html.DisplayName(Model.spells.Where(a => a.Class.IDClass == i).Select(aa => aa.Class.name).FirstOrDefault())</h2>
    <table class="table">
        @foreach (var item in Model.spells)
        {
            if (item.IDClass == i)
            {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.conceptLvl)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.name)
                        </td>

                        @if (@item.description.Split().ToArray().Length <= 20)
                        {
                            <td>
                                @item.description
                            </td>
                        }
                        else
                        {
                            <td>
                                @String.Join(" ", @item.description.Split().Take(20))
                                @Html.ActionLink("...", "Details", "Spells", new { id = item.IDSpell }, new { })
                            </td>
                        }

                        <td>
                            @Html.ActionLink("Details", "Details", "Spells", new { id = item.IDSpell }, new { })
                        </td>
                        @if (User.IsInRole("Admin"))
                        {
                            <td>
                                @Html.ActionLink("Edit", "Edit", "Spells", new { id = item.IDSpell }, new { }) |
                                @Html.ActionLink("Delete", "Delete", "Spells", new { id = item.IDSpell }, new { })
                            </td>
                        }
                    </tr>
            }
        }
    </table>
}

<h2>Monsters</h2>
<table class="table">
    @foreach (var item in Model.monsters)
    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.conceptLvl)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                @if (@item.description.Split().ToArray().Length <= 20)
                {
                    <td>
                        @item.description
                    </td>
                }
                else
                {
                    <td>
                        @String.Join(" ", @item.description.Split().Take(20))
                        @Html.ActionLink("...", "Details", "Monsters", new { id = item.IDMonster }, new { })
                    </td>
                }
                <td>
                    @Html.ActionLink("Details", "Details", "Monsters", new { id = item.IDMonster }, new { })
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Monsters", new { id = item.IDMonster }, new { }) |
                        @Html.ActionLink("Delete", "Delete", "Monsters", new { id = item.IDMonster }, new { })
                    </td>
                }
            </tr>
    }
</table>